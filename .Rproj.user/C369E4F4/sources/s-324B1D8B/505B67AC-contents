# Operaciones Vectoriales

```{r pkgs, echo=FALSE, message=FALSE}
library(tidyverse)
library(sf)
library(here)
library(mapview)
```


## Dividir una capa vectorial en múltiples partes

Supongamos que tenemos una capa vectorial que contiene varios polígonos, correspondientes cada uno de ellos a un registro en la tabla de atributos. Puede que nos interese generar una capa vectorial para cada uno de éstos polígonos. 


```{r}
melojar <- st_read("data/spatial/melojo_sn.shp")
mapview::mapview(melojar)
```

Como vemos, esta capa de distribución del roble melojo en Sierra Nevada, contiene 8 polígonos correspondientes a las 8 poblaciones.

```{r, echo=FALSE}
melojar %>% st_set_geometry(NULL)
```

Nuestro objetivo ahora es generar tantas capas vectoriales como polígonos. Para ello, usamos esta pequeña función que hemos escrito^[Modificada a partir de https://gis.stackexchange.com/questions/347927/r-equivalent-of-arcmap-split-by-attributes]. 

```{r}
splitByAttributes <- function(spatialdata, codename, dsn){
  codenames <- unique(spatialdata[[codename]])
  for (i in 1:length(codenames)) {
    tmp <- spatialdata[spatialdata[[codename]] == codenames[i], ]
    sf::st_write(obj = tmp, paste0(dsn, "/", codenames[i], ".shp"), append=FALSE, quiet=FALSE)
    }
}
```

La función `splitByAttributes` tiene los siguientes argumentos: `spatialdata` que indica la capa vectorial a dividir; `codename` es el atributo por el cual vamos a generar cada uno de los polígonos; y `dsn` que indica la carpeta de salida. Supongamos que para nuestra capa queremos generar un polígono para cada población de roble melojo en Sierra Nevada, es decir, el atributo por el que queremos dividir nuestra capa es `loc`. 

```{r, message=FALSE}
carpeta_destino <- here::here("data/spatial/melojo_pobs")
splitByAttributes(melojar, codename = "loc", dsn = carpeta_destino)
```

Si exploramos la carpeta de destino (*i.e.* `data/spatial/melojo_pobs`) podemos observar que se han creado 8 capas vectoriales con el nombre de cada una de las localidades.

```{r}
list.files(carpeta_destino, pattern = ".shp")
```


